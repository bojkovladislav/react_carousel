{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","smileWidth","amountOfSmiles","step","speedOfAnimation","infinite","updateState","key","value","setState","renderInputField","label","name","min","max","determineInputType","choice","htmlFor","className","type","toString","onChange","e","parsedValue","target","checked","this","images","props","settings","speed","slidesToShow","slidesToScroll","style","width","map","image","src","alt","Component","App","length","React","ReactDOM","render","document","getElementById"],"mappings":"sSAkBMA,E,4MACJC,MAAyB,CACvBC,WAAY,IACZC,eAAgB,EAChBC,KAAM,EACNC,iBAAkB,IAClBC,UAAU,G,EAGZC,YAAc,SAAwBC,EAAQC,GAC5C,EAAKC,SAAL,eAAiBF,EAAMC,K,EAGzBE,iBAAmB,SACjBC,EACAC,EACAJ,EACAK,EACAC,GAEA,IAAMC,EAAqB,SAACC,GAC1B,MAAwB,kBAAVR,EAAqBQ,EAAS,YAG9C,OACE,wBAAOC,QAASL,EAAMM,UAAU,uBAAhC,UACGP,EACD,uBACEQ,KAAMJ,EAAmB,UACzBH,KAAMA,EACNJ,MAAOA,EAAMY,WACbP,IAAKA,EACLC,IAAKA,EACLO,SAAU,SAACC,GACT,IAAMC,EAA+B,kBAAVf,GACtBc,EAAEE,OAAOhB,MACVc,EAAEE,OAAOC,QAEb,EAAKnB,YAAYM,EAAqBW,IAExCL,UAAS,yBAAoBH,EAAmB,gB,4CAMxD,WACE,MAEIW,KAAK1B,MADPC,EADF,EACEA,WAAYC,EADd,EACcA,eAAgBC,EAD9B,EAC8BA,KAAMC,EADpC,EACoCA,iBAAkBC,EADtD,EACsDA,SAE9CsB,EAAWD,KAAKE,MAAhBD,OAEFE,EAAW,CACfxB,WACAyB,MAAO1B,EACP2B,aAAc7B,EACd8B,eAAgB7B,GAGlB,OACE,sBAAKe,UAAU,WAAf,UACE,oBACEA,UAAU,kBACVe,MAAO,CACLC,MAAOhC,EAAiBD,GAH5B,SAME,cAAC,IAAD,2BAAY4B,GAAZ,aACGF,EAAOQ,KAAI,SAAAC,GACV,OACE,oBAAgBlB,UAAU,MAA1B,SACE,qBACEmB,IAAKD,EACLH,MAAO,CAAEC,MAAM,GAAD,OAAKjC,EAAL,OACdqC,IAAI,WAJCF,WAYjB,sBAAKlB,UAAU,gBAAf,UACGQ,KAAKhB,iBACJ,aACA,aACAT,EACA,KAGDyB,KAAKhB,iBACJ,aACA,iBACAR,EACA,EACA,IAGDwB,KAAKhB,iBACJ,OACA,OACAP,EACA,EACA,IAGDuB,KAAKhB,iBACJ,wBACA,mBACAN,EACA,GAGDsB,KAAKhB,iBACJ,WACA,WACAL,a,GApHWkC,aA4HRxC,ICtITyC,E,4MACJxC,MAAQ,CACN2B,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWD,KAAK1B,MAAhB2B,OAER,OACE,sBAAKT,UAAU,MAAf,UACE,qBAAIA,UAAU,kBAAkB,UAAQ,QAAxC,0BAEG,IACAS,EAAOc,OACP,IAJH,YAQA,cAAC,EAAD,CAAUd,OAAQA,W,GA7BRe,IAAMH,WAmCTC,ICxCfG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a1e94b29.chunk.js","sourcesContent":["import './Carousel.scss';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport Slider from 'react-slick';\nimport { Component } from 'react';\n\ninterface Props {\n  images: string[];\n}\n\ninterface State {\n  smileWidth: number;\n  amountOfSmiles: number;\n  step: number;\n  speedOfAnimation: number;\n  infinite: boolean;\n}\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    smileWidth: 130,\n    amountOfSmiles: 2,\n    step: 3,\n    speedOfAnimation: 1000,\n    infinite: false,\n  };\n\n  updateState = <K extends keyof State>(key: K, value: number | boolean) => {\n    this.setState({ [key]: value } as Pick<State, K>);\n  };\n\n  renderInputField = (\n    label: string,\n    name: string,\n    value: number | boolean,\n    min?: number,\n    max?: number,\n  ) => {\n    const determineInputType = (choice: string) => {\n      return typeof value === 'number' ? choice : 'checkbox';\n    };\n\n    return (\n      <label htmlFor={name} className=\"control-panel__label\">\n        {label}\n        <input\n          type={determineInputType('number')}\n          name={name}\n          value={value.toString()}\n          min={min}\n          max={max}\n          onChange={(e) => {\n            const parsedValue = typeof value === 'number'\n              ? +e.target.value\n              : e.target.checked;\n\n            this.updateState(name as keyof State, parsedValue);\n          }}\n          className={`control-panel__${determineInputType('input')}`}\n        />\n      </label>\n    );\n  };\n\n  render() {\n    const {\n      smileWidth, amountOfSmiles, step, speedOfAnimation, infinite,\n    } = this.state;\n    const { images } = this.props;\n\n    const settings = {\n      infinite,\n      speed: speedOfAnimation,\n      slidesToShow: amountOfSmiles,\n      slidesToScroll: step,\n    };\n\n    return (\n      <div className=\"carousel\">\n        <ul\n          className=\"carousel__frame\"\n          style={{\n            width: amountOfSmiles * smileWidth,\n          }}\n        >\n          <Slider {...settings}>\n            {images.map(image => {\n              return (\n                <li key={image} className=\"img\">\n                  <img\n                    src={image}\n                    style={{ width: `${smileWidth}px` }}\n                    alt=\"smile\"\n                  />\n                </li>\n              );\n            })}\n          </Slider>\n        </ul>\n\n        <div className=\"control-panel\">\n          {this.renderInputField(\n            'Item width',\n            'smileWidth',\n            smileWidth,\n            130,\n          )}\n\n          {this.renderInputField(\n            'Frame size',\n            'amountOfSmiles',\n            amountOfSmiles,\n            1,\n            10,\n          )}\n\n          {this.renderInputField(\n            'Step',\n            'step',\n            step,\n            1,\n            10,\n          )}\n\n          {this.renderInputField(\n            'Speed of an animation',\n            'speedOfAnimation',\n            speedOfAnimation,\n            1,\n          )}\n\n          {this.renderInputField(\n            'Infinite',\n            'infinite',\n            infinite,\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"carousel__title\" data-cy=\"title\">\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}